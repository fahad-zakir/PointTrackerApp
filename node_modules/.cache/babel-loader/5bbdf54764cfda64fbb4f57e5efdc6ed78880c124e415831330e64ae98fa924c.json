{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      point: {\n        name: '',\n        x: 0,\n        y: 0\n      },\n      originalPoint: null,\n      nearestPoints: [],\n      nearestDistance: 0,\n      farthestPoints: [],\n      farthestDistance: 0\n    };\n  },\n  created() {\n    this.fetchPoint();\n  },\n  watch: {\n    'point.x': 'updateDistances',\n    'point.y': 'updateDistances'\n  },\n  methods: {\n    fetchPoint() {\n      axios.get(`http://localhost:3000/points/${this.$route.params.id}`).then(response => {\n        this.point = response.data;\n        this.originalPoint = {\n          ...this.point\n        };\n        this.updateDistances();\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    savePoint() {\n      axios.put(`http://localhost:3000/points/${this.$route.params.id}`, this.point).then(() => {\n        this.$router.push('/');\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    resetForm() {\n      this.point = {\n        ...this.originalPoint\n      };\n    },\n    deletePoint() {\n      axios.delete(`http://localhost:3000/points/${this.$route.params.id}`).then(() => {\n        this.$router.push('/');\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    updateDistances() {\n      axios.get('http://localhost:3000/points').then(response => {\n        const points = response.data;\n        const distances = points.map(p => ({\n          ...p,\n          distance: Math.sqrt((p.x - this.point.x) ** 2 + (p.y - this.point.y) ** 2)\n        }));\n        const nearestDistance = Math.min(...distances.map(d => d.distance));\n        const farthestDistance = Math.max(...distances.map(d => d.distance));\n        this.nearestPoints = distances.filter(d => d.distance === nearestDistance);\n        this.nearestDistance = nearestDistance.toFixed(1);\n        this.farthestPoints = distances.filter(d => d.distance === farthestDistance);\n        this.farthestDistance = farthestDistance.toFixed(1);\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  },\n  computed: {\n    isFormValid() {\n      return this.point.name && this.point.name !== this.originalPoint.name && this.point.x !== null && this.point.y !== null;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","point","name","x","y","originalPoint","nearestPoints","nearestDistance","farthestPoints","farthestDistance","created","fetchPoint","watch","methods","get","$route","params","id","then","response","updateDistances","catch","error","console","savePoint","put","$router","push","resetForm","deletePoint","delete","points","distances","map","p","distance","Math","sqrt","min","d","max","filter","toFixed","computed","isFormValid"],"sources":["/Users/fahadzakir/Desktop/assessments/PointTrackerApp/src/components/EditPoint.vue"],"sourcesContent":["<template>\n    <div>\n        <h2>Edit Point</h2>\n        <router-link to=\"/\" class=\"home-button\">Home</router-link> <!-- Home button -->\n        <form @submit.prevent=\"savePoint\">\n            <div>\n                <label>Name:</label>\n                <input class=\"name-input\" v-model=\"point.name\" required />\n            </div>\n            <div>\n                <label>X:</label>\n                <input type=\"number\" v-model=\"point.x\" required />\n            </div>\n            <div>\n                <label>Y:</label>\n                <input type=\"number\" v-model=\"point.y\" required />\n            </div>\n            <button type=\"submit\">Save</button>\n            <button type=\"button\" @click=\"resetForm\">Reset</button>\n            <button type=\"button\" @click=\"deletePoint\">Delete</button>\n        </form>\n        <p v-if=\"nearestPoints.length\">Nearest points at distance {{ nearestDistance }}:</p>\n        <ul class=\"custom-list\">\n            <li v-for=\"p in nearestPoints\" :key=\"p.id\">{{ p.name }} ({{ p.x }}, {{ p.y }})</li>\n        </ul>\n        <p v-if=\"farthestPoints.length\">Farthest points at distance {{ farthestDistance }}:</p>\n        <ul class=\"custom-list\">\n            <li v-for=\"p in farthestPoints\" :key=\"p.id\">{{ p.name }} ({{ p.x }}, {{ p.y }})</li>\n        </ul>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n        return {\n            point: { name: '', x: 0, y: 0 },\n            originalPoint: null,\n            nearestPoints: [],\n            nearestDistance: 0,\n            farthestPoints: [],\n            farthestDistance: 0,\n        };\n    },\n    created() {\n        this.fetchPoint();\n    },\n    watch: {\n        'point.x': 'updateDistances',\n        'point.y': 'updateDistances',\n    },\n    methods: {\n        fetchPoint() {\n            axios.get(`http://localhost:3000/points/${this.$route.params.id}`)\n                .then(response => {\n                    this.point = response.data;\n                    this.originalPoint = { ...this.point };\n                    this.updateDistances();\n                })\n                .catch(error => {\n                    console.error(error);\n                });\n        },\n        savePoint() {\n            axios.put(`http://localhost:3000/points/${this.$route.params.id}`, this.point)\n                .then(() => {\n                    this.$router.push('/');\n                })\n                .catch(error => {\n                    console.error(error);\n                });\n        },\n        resetForm() {\n            this.point = { ...this.originalPoint };\n        },\n        deletePoint() {\n            axios.delete(`http://localhost:3000/points/${this.$route.params.id}`)\n                .then(() => {\n                    this.$router.push('/');\n                })\n                .catch(error => {\n                    console.error(error);\n                });\n        },\n        updateDistances() {\n            axios.get('http://localhost:3000/points')\n                .then(response => {\n                    const points = response.data;\n                    const distances = points.map(p => ({\n                        ...p,\n                        distance: Math.sqrt((p.x - this.point.x) ** 2 + (p.y - this.point.y) ** 2),\n                    }));\n\n                    const nearestDistance = Math.min(...distances.map(d => d.distance));\n                    const farthestDistance = Math.max(...distances.map(d => d.distance));\n\n                    this.nearestPoints = distances.filter(d => d.distance === nearestDistance);\n                    this.nearestDistance = nearestDistance.toFixed(1);\n\n                    this.farthestPoints = distances.filter(d => d.distance === farthestDistance);\n                    this.farthestDistance = farthestDistance.toFixed(1);\n                })\n                .catch(error => {\n                    console.error(error);\n                });\n        },\n    },\n    computed: {\n        isFormValid() {\n            return this.point.name && this.point.name !== this.originalPoint.name && this.point.x !== null && this.point.y !== null;\n        },\n    },\n};\n</script>\n\n<style scoped>\nform {\n    display: flex;\n    flex-direction: column;\n    width: 300px;\n    margin: auto;\n}\n\nlabel {\n    margin-top: 10px;\n}\n\ninput {\n    margin-bottom: 10px;\n}\n\nbutton {\n    margin-top: 10px;\n}\n\n.home-button {\n    display: inline-block;\n    background-color: #007BFF;\n    /* Blue background */\n    color: white;\n    /* White text */\n    padding: 4px;\n    /* Padding */\n    border-radius: 4px;\n    /* Rounded corners */\n    text-decoration: none;\n    /* Remove underline */\n    margin-top: 10px;\n    /* Spacing */\n}\n\n.home-button:hover {\n    background-color: #0056b3;\n    /* Darker blue on hover */\n}</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}